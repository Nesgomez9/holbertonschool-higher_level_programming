=================================
Doctests for add_integer function
=================================

Import function
=================

    >>> add_integer = __import__("0-add_integer").add_integer

Add Two Integers
==================

    >>> add_integer(2, 8)
    10

    >>> add_integer(-2, 4)
    2

Add Floats
==================

    >>> add_integer(2.0, 3.0)
    5

Non-Numbers
===========

    >>> add_integer('c', 3)
    Traceback (most recent call last):
              ...
    TypeError: a must be an integer

    >>> add_integer(3, 'c')
    Traceback (most recent call last):
              ...
    TypeError: b must be an integer

    >>> add_integer([3, 6], 6)
    Traceback (most recent call last):
              ...
    TypeError: a must be an integer


    >>> add_integer(6, [3, 6])
    Traceback (most recent call last):
              ...
    TypeError: b must be an integer

    >>> add_integer(None, 1)
    Traceback (most recent call last):
          ...
    TypeError: a must be an integer


    >>> add_integer(1, None)
    Traceback (most recent call last):
              ...
    TypeError: b must be an integer

    >>> add_integer("HelloWorld", 4)
    Traceback (most recent call last):
              ...
    TypeError: a must be an integer


    >>> add_integer(4, "HelloWorld")
    Traceback (most recent call last):
              ...
    TypeError: b must be an integer

    >>> add_integer()
    Traceback (most recent call last):
              ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
              ...
    OverflowError: cannot convert float infinity to integer
