=================================
Doctests for matrix_divided function
=================================

Import Function
===============

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Intergers and floats
====================

    >>> matrix_divided([[1, 2.4, 3], [4.3, 5, 6.8]], 2)
    [[0.5, 1.2, 1.5], [2.15, 2.5, 3.4]]

    >>> matrix_divided([[1, -2, 3], [-4, 5, 6]], 2)
    [[0.5, -1.0, 1.5], [-2.0, 2.5, 3.0]]

Division by 0
=============

    >>> matrix_divided([[1, 2.4, 3], [4.3, 5, 6.8]], 0)
    Traceback (most recent call last):
              ...
    ZeroDivisionError: division by zero

Invalid Matrix
===============

    >>> matrix_divided(None, 14)
    Traceback (most recent call last):
              ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[]], 8)
    Traceback (most recent call last):
              ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 3], 9], 2)
    Traceback (most recent call last):
              ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 3], []], 2)
    Traceback (most recent call last):
              ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 2], [3, 4]], float('inf'))
    [[0.0, 0.0], [0.0, 0.0]]
